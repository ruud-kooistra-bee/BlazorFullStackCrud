@page "/userpage"
@page "/userpage/{id:int}"
@inject IUserService UserService

@if(Id == null)
{
    <PageTitle>Create a new User</PageTitle>
    <h3>Create a new User</h3>
}
else
{
    <PageTitle>Edit @user.Username</PageTitle>
    <h3>Edit @user.Username</h3>
}

<EditForm Model="user" OnSubmit="HandleSubmit">
    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Email)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Username)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="userrole">Role</label><br />
        <InputSelect id="userrole" @bind-Value="user.RoleId" class="form-select">
            @foreach (var role in UserService.Roles)
            {
                <option value="@role.Id">@role.Name</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="dateOfBirth">Data of Birth</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteUser">Delete User</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    User user = new User { Role = new Role() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New User" : "Update User";
        await UserService.GetRoles();
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id == null)
        {
            user.Role = UserService.Roles[0];
            user.RoleId = user.Role.Id;
        }
        else
        {
            user = await UserService.GetSingleUser((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await UserService.CreateUser(user);
        }
        else
        {
            await UserService.UpdateUser(user);
        }
    }

    async Task DeleteUser()
    {
        await UserService.DeleteUser(user.Id);
    }
}
