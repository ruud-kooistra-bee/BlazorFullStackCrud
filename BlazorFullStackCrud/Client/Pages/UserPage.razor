@page "/userpage/{id:int}"
@inject IUserService UserService

@if(Id == null)
{
    <PageTitle>User not found</PageTitle>
    <h3>Please Register first</h3>
}
else
{
    <PageTitle>Edit @user.Username</PageTitle>
    <h3>Edit @user.Username</h3>

    <EditForm Model="user" OnSubmit="HandleSubmit">
        <div class="form-group">
            <label for="email" class="required">Email</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Email)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
            <ValidationMessage For="@(() => user.Username)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="password" class="required">Password</label>
            <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
            <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
            <ValidationMessage For="@(() => user.ConfirmPassword)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="userrole">Role</label><br />
            <InputSelect id="userrole" @bind-Value="user.RoleId" class="form-select">
                @foreach (var role in UserService.Roles)
                {
                    <option value="@role.Id">@role.Name</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="dateOfBirth">Data of Birth</label>
            <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Save Changes</button>
        <button type="button" class="btn btn-danger" @onclick="DeleteUser">Delete User</button>
    </EditForm>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    UserDto user = new UserDto();

    protected override async Task OnInitializedAsync()
    {
        await UserService.GetRoles();
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id != null)
            user = await UserService.GetSingleUser((int)Id);
    }

    protected async Task HandleSubmit()
    {
        if (Id != null)
        {
            await UserService.UpdateUser(user);
        } 
    }

    protected async Task DeleteUser()
    {
        await UserService.DeleteUser(user.Id);
    }
}
