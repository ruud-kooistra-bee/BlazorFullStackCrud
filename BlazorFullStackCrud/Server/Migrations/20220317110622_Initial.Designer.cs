// <auto-generated />
using System;
using BlazorFullStackCrud.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorFullStackCrud.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220317110622_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorFullStackCrud.Shared.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("BlazorFullStackCrud.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "",
                            DateOfBirth = new DateTime(2022, 3, 17, 12, 6, 21, 989, DateTimeKind.Local).AddTicks(3624),
                            Email = "user#domain.com",
                            Password = "",
                            PasswordHash = new byte[] { 214, 145, 3, 188, 68, 77, 87, 28, 121, 178, 154, 7, 171, 92, 6, 192, 231, 219, 176, 133, 21, 82, 127, 174, 198, 172, 111, 78, 33, 11, 101, 211, 45, 101, 130, 88, 148, 81, 120, 231, 108, 79, 252, 203, 160, 253, 15, 0, 41, 218, 141, 67, 150, 114, 70, 184, 74, 75, 125, 137, 143, 136, 191, 47 },
                            PasswordSalt = new byte[] { 70, 254, 99, 248, 222, 85, 43, 179, 125, 196, 31, 8, 241, 119, 176, 198, 64, 113, 67, 136, 86, 19, 31, 174, 147, 240, 205, 22, 161, 49, 17, 241, 127, 167, 145, 113, 106, 204, 216, 122, 198, 162, 52, 11, 55, 170, 158, 31, 76, 174, 182, 45, 117, 168, 24, 139, 207, 115, 177, 225, 124, 215, 16, 232, 191, 234, 157, 166, 160, 154, 62, 115, 205, 114, 116, 54, 139, 114, 81, 141, 195, 62, 86, 238, 198, 150, 26, 32, 131, 55, 238, 101, 212, 94, 249, 229, 241, 105, 136, 102, 28, 252, 30, 154, 73, 162, 21, 235, 251, 166, 172, 52, 202, 248, 178, 88, 33, 28, 67, 26, 83, 30, 67, 205, 98, 163, 12, 21 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "",
                            DateOfBirth = new DateTime(2022, 3, 17, 12, 6, 21, 989, DateTimeKind.Local).AddTicks(3632),
                            Email = "user#domain.com",
                            Password = "",
                            PasswordHash = new byte[] { 214, 145, 3, 188, 68, 77, 87, 28, 121, 178, 154, 7, 171, 92, 6, 192, 231, 219, 176, 133, 21, 82, 127, 174, 198, 172, 111, 78, 33, 11, 101, 211, 45, 101, 130, 88, 148, 81, 120, 231, 108, 79, 252, 203, 160, 253, 15, 0, 41, 218, 141, 67, 150, 114, 70, 184, 74, 75, 125, 137, 143, 136, 191, 47 },
                            PasswordSalt = new byte[] { 70, 254, 99, 248, 222, 85, 43, 179, 125, 196, 31, 8, 241, 119, 176, 198, 64, 113, 67, 136, 86, 19, 31, 174, 147, 240, 205, 22, 161, 49, 17, 241, 127, 167, 145, 113, 106, 204, 216, 122, 198, 162, 52, 11, 55, 170, 158, 31, 76, 174, 182, 45, 117, 168, 24, 139, 207, 115, 177, 225, 124, 215, 16, 232, 191, 234, 157, 166, 160, 154, 62, 115, 205, 114, 116, 54, 139, 114, 81, 141, 195, 62, 86, 238, 198, 150, 26, 32, 131, 55, 238, 101, 212, 94, 249, 229, 241, 105, 136, 102, 28, 252, 30, 154, 73, 162, 21, 235, 251, 166, 172, 52, 202, 248, 178, 88, 33, 28, 67, 26, 83, 30, 67, 205, 98, 163, 12, 21 },
                            RoleId = 2,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("BlazorFullStackCrud.Shared.User", b =>
                {
                    b.HasOne("BlazorFullStackCrud.Shared.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
